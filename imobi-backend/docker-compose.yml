version: '3.8'

services:
  # Aplicação Backend
  app:
    build: 
      context: .
      dockerfile: Dockerfile
    ports:
      - "${PORT:-5000}:${PORT:-5000}"
    env_file:
      - .env
    environment:
      - NODE_ENV=${NODE_ENV:-production}
    depends_on:
      - db
      - redis
    volumes:
      - ./uploads:/app/uploads
      - ./logs:/app/logs
    restart: unless-stopped
    networks:
      - imobi-network

  # Banco de dados PostgreSQL
  db:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-imobi}
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init.sql:/docker-entrypoint-initdb.d/init.sql
    restart: unless-stopped
    networks:
      - imobi-network

  # Redis para cache e sessões
  redis:
    image: redis:7-alpine
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - imobi-network

  # Adminer para gerenciamento do banco de dados (opcional)
  adminer:
    image: adminer
    restart: always
    ports:
      - "${ADMINER_PORT:-8080}:8080"
    depends_on:
      - db
    networks:
      - imobi-network

networks:
  imobi-network:
    driver: bridge

volumes:
  postgres_data:
  redis_data: